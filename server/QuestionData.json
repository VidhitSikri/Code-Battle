[
  {
    "difficulty": "easy",
    "questionname": "Two Sum",
    "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
    "sample input": "[2, 7, 11, 15], target = 9",
    "sample output": "[0, 1]",
    "testcases": {
      "1": {
        "input": "[3, 2, 4], target = 6",
        "output": "[1, 2]"
      },
      "2": {
        "input": "[3, 3], target = 6",
        "output": "[0, 1]"
      },
      "3": {
        "input": "[2, 5, 5, 11], target = 10",
        "output": "[1, 2]"
      },
      "4": {
        "input": "[1, 2, 3], target = 4",
        "output": "[0, 2]"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Palindrome Number",
    "description": "Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.",
    "sample input": "121",
    "sample output": "true",
    "testcases": {
      "1": {
        "input": "12321",
        "output": "true"
      },
      "2": {
        "input": "123",
        "output": "false"
      },
      "3": {
        "input": "-121",
        "output": "false"
      },
      "4": {
        "input": "10",
        "output": "false"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Valid Parentheses",
    "description": "Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.",
    "sample input": "()[]{}",
    "sample output": "true",
    "testcases": {
      "1": {
        "input": "(]",
        "output": "false"
      },
      "2": {
        "input": "([{}])",
        "output": "true"
      },
      "3": {
        "input": "({[)]}",
        "output": "false"
      },
      "4": {
        "input": "",
        "output": "true"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Merge Two Sorted Lists",
    "description": "Merge two sorted linked lists and return it as a new sorted list.",
    "sample input": "[1,2,4], [1,3,4]",
    "sample output": "[1,1,2,3,4,4]",
    "testcases": {
      "1": {
        "input": "[], []",
        "output": "[]"
      },
      "2": {
        "input": "[1,2,3], []",
        "output": "[1,2,3]"
      },
      "3": {
        "input": "[5], [1,2,3]",
        "output": "[1,2,3,5]"
      },
      "4": {
        "input": "[0], [0]",
        "output": "[0,0]"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Best Time to Buy and Sell Stock",
    "description": "Find the maximum profit by choosing a single day to buy one stock and a different day in the future to sell that stock.",
    "sample input": "[7,1,5,3,6,4]",
    "sample output": "5",
    "testcases": {
      "1": {
        "input": "[7,6,4,3,1]",
        "output": "0"
      },
      "2": {
        "input": "[1,2]",
        "output": "1"
      },
      "3": {
        "input": "[2,4,1]",
        "output": "2"
      },
      "4": {
        "input": "[3,3,5,0,0,3,1,4]",
        "output": "4"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Reverse Integer",
    "description": "Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range, return 0.",
    "sample input": "123",
    "sample output": "321",
    "testcases": {
      "1": {
        "input": "-123",
        "output": "-321"
      },
      "2": {
        "input": "120",
        "output": "21"
      },
      "3": {
        "input": "0",
        "output": "0"
      },
      "4": {
        "input": "1534236469",
        "output": "0"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Remove Duplicates from Sorted Array",
    "description": "Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once.",
    "sample input": "[1,1,2]",
    "sample output": "2",
    "testcases": {
      "1": {
        "input": "[0,0,1,1,1,2,2,3,3,4]",
        "output": "5"
      },
      "2": {
        "input": "[1,2,3]",
        "output": "3"
      },
      "3": {
        "input": "[1,1,1]",
        "output": "1"
      },
      "4": {
        "input": "[]",
        "output": "0"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Implement strStr()",
    "description": "Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.",
    "sample input": "haystack = 'hello', needle = 'll'",
    "sample output": "2",
    "testcases": {
      "1": {
        "input": "haystack = 'aaaaa', needle = 'bba'",
        "output": "-1"
      },
      "2": {
        "input": "haystack = '', needle = ''",
        "output": "0"
      },
      "3": {
        "input": "haystack = 'abc', needle = ''",
        "output": "0"
      },
      "4": {
        "input": "haystack = 'mississippi', needle = 'issip'",
        "output": "4"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Search Insert Position",
    "description": "Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.",
    "sample input": "[1,3,5,6], target = 5",
    "sample output": "2",
    "testcases": {
      "1": {
        "input": "[1,3,5,6], target = 2",
        "output": "1"
      },
      "2": {
        "input": "[1,3,5,6], target = 7",
        "output": "4"
      },
      "3": {
        "input": "[1,3,5,6], target = 0",
        "output": "0"
      },
      "4": {
        "input": "[1], target = 0",
        "output": "0"
      }
    }
  },
  {
    "difficulty": "easy",
    "questionname": "Maximum Subarray",
    "description": "Given an integer array nums, find the contiguous subarray which has the largest sum and return its sum.",
    "sample input": "[-2,1,-3,4,-1,2,1,-5,4]",
    "sample output": "6",
    "testcases": {
      "1": {
        "input": "[1]",
        "output": "1"
      },
      "2": {
        "input": "[5,4,-1,7,8]",
        "output": "23"
      },
      "3": {
        "input": "[-1,-2,-3,-4]",
        "output": "-1"
      },
      "4": {
        "input": "[-2, -1]",
        "output": "-1"
      }
    }
  },

  {
    "difficulty": "medium",
    "questionname": "Add Two Numbers",
    "description": "You are given two non-empty linked lists representing two non-negative integers. Add the two numbers and return the sum as a linked list.",
    "sample input": "[2,4,3], [5,6,4]",
    "sample output": "[7,0,8]",
    "testcases": {
      "1": {
        "input": "[0], [0]",
        "output": "[0]"
      },
      "2": {
        "input": "[9,9,9,9,9,9,9], [9,9,9,9]",
        "output": "[8,9,9,9,0,0,0,1]"
      },
      "3": {
        "input": "[1,8], [0]",
        "output": "[1,8]"
      },
      "4": {
        "input": "[2,4], [5,6,4]",
        "output": "[7,0,5]"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "Longest Substring Without Repeating Characters",
    "description": "Given a string s, find the length of the longest substring without repeating characters.",
    "sample input": "abcabcbb",
    "sample output": "3",
    "testcases": {
      "1": {
        "input": "bbbbb",
        "output": "1"
      },
      "2": {
        "input": "pwwkew",
        "output": "3"
      },
      "3": {
        "input": "",
        "output": "0"
      },
      "4": {
        "input": "dvdf",
        "output": "3"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "3Sum",
    "description": "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.",
    "sample input": "[-1,0,1,2,-1,-4]",
    "sample output": "[[-1,-1,2],[-1,0,1]]",
    "testcases": {
      "1": {
        "input": "[0,0,0]",
        "output": "[[0,0,0]]"
      },
      "2": {
        "input": "[]",
        "output": "[]"
      },
      "3": {
        "input": "[1,-1,-1,0]",
        "output": "[[-1,0,1]]"
      },
      "4": {
        "input": "[3,0,-2,-1,1,2]",
        "output": "[[-2,-1,3],[-2,0,2],[-1,0,1]]"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "Container With Most Water",
    "description": "Given n non-negative integers representing the height of vertical lines, find two lines that together with the x-axis form a container that holds the most water.",
    "sample input": "[1,8,6,2,5,4,8,3,7]",
    "sample output": "49",
    "testcases": {
      "1": {
        "input": "[1,1]",
        "output": "1"
      },
      "2": {
        "input": "[4,3,2,1,4]",
        "output": "16"
      },
      "3": {
        "input": "[1,2,1]",
        "output": "2"
      },
      "4": {
        "input": "[2,3,10,5,7,8,9]",
        "output": "36"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "Integer to Roman",
    "description": "Convert an integer to a Roman numeral.",
    "sample input": "58",
    "sample output": "LVIII",
    "testcases": {
      "1": {
        "input": "3",
        "output": "III"
      },
      "2": {
        "input": "1994",
        "output": "MCMXCIV"
      },
      "3": {
        "input": "9",
        "output": "IX"
      },
      "4": {
        "input": "40",
        "output": "XL"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "Roman to Integer",
    "description": "Convert a Roman numeral to an integer.",
    "sample input": "MCMXCIV",
    "sample output": "1994",
    "testcases": {
      "1": {
        "input": "III",
        "output": "3"
      },
      "2": {
        "input": "LVIII",
        "output": "58"
      },
      "3": {
        "input": "IX",
        "output": "9"
      },
      "4": {
        "input": "XL",
        "output": "40"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "Group Anagrams",
    "description": "Given an array of strings, group the anagrams together.",
    "sample input": "[\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]",
    "sample output": "[[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]",
    "testcases": {
      "1": {
        "input": "[\"\"]",
        "output": "[[\"\"]]"
      },
      "2": {
        "input": "[\"a\"]",
        "output": "[[\"a\"]]"
      },
      "3": {
        "input": "[\"abc\",\"bca\",\"cab\",\"bac\"]",
        "output": "[[\"abc\",\"bca\",\"cab\",\"bac\"]]"
      },
      "4": {
        "input": "[\"ab\",\"ba\",\"abc\",\"cba\"]",
        "output": "[[\"ab\",\"ba\"],[\"abc\",\"cba\"]]"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "Top K Frequent Elements",
    "description": "Given a non-empty array of integers, return the k most frequent elements.",
    "sample input": "[1,1,1,2,2,3], k = 2",
    "sample output": "[1,2]",
    "testcases": {
      "1": {
        "input": "[1], k = 1",
        "output": "[1]"
      },
      "2": {
        "input": "[1,2,3,4], k = 2",
        "output": "[1,2]"
      },
      "3": {
        "input": "[4,1,-1,2,-1,2,3], k = 2",
        "output": "[-1,2]"
      },
      "4": {
        "input": "[5,3,1,1,1,3,73,1], k = 2",
        "output": "[1,3]"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "Product of Array Except Self",
    "description": "Given an array nums of n integers where n > 1, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].",
    "sample input": "[1,2,3,4]",
    "sample output": "[24,12,8,6]",
    "testcases": {
      "1": {
        "input": "[2,3,4,5]",
        "output": "[60,40,30,24]"
      },
      "2": {
        "input": "[1,2]",
        "output": "[2,1]"
      },
      "3": {
        "input": "[5,0,2]",
        "output": "[0,10,0]"
      },
      "4": {
        "input": "[9,0,-2]",
        "output": "[0,-18,0]"
      }
    }
  },
  {
    "difficulty": "medium",
    "questionname": "Set Matrix Zeroes",
    "description": "Given an m x n integer matrix, if an element is 0, set its entire row and column to 0 in-place.",
    "sample input": "[[1,1,1],[1,0,1],[1,1,1]]",
    "sample output": "[[1,0,1],[0,0,0],[1,0,1]]",
    "testcases": {
      "1": {
        "input": "[[0,1,2,0],[3,4,5,2],[1,3,1,5]]",
        "output": "[[0,0,0,0],[0,4,5,0],[0,3,1,0]]"
      },
      "2": {
        "input": "[[1,2,3],[4,5,6],[7,8,9]]",
        "output": "[[1,2,3],[4,5,6],[7,8,9]]"
      },
      "3": {
        "input": "[[1,0,3]]",
        "output": "[[0,0,0]]"
      },
      "4": {
        "input": "[[0,1]]",
        "output": "[[0,0]]"
      }
    }
  },
  {
        "difficulty": "hard",
        "questionname": "Merge k Sorted Lists",
        "description": "Merge k sorted linked lists and return it as one sorted list.",
        "sample input": "[[1,4,5],[1,3,4],[2,6]]",
        "sample output": "[1,1,2,3,4,4,5,6]",
        "testcases": {
            "1": {"input": "[[]]", "output": "[]"},
            "2": {"input": "[]", "output": "[]"},
            "3": {"input": "[[1]]", "output": "[1]"},
            "4": {"input": "[[1,3,5],[2,4,6],[0,7,8]]", "output": "[0,1,2,3,4,5,6,7,8]"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "Trapping Rain Water",
        "description": "Given n non-negative integers representing an elevation map, compute how much water it can trap after raining.",
        "sample input": "[0,1,0,2,1,0,1,3,2,1,2,1]",
        "sample output": "6",
        "testcases": {
            "1": {"input": "[4,2,0,3,2,5]", "output": "9"},
            "2": {"input": "[2,0,2]", "output": "2"},
            "3": {"input": "[3,0,0,2,0,4]", "output": "10"},
            "4": {"input": "[1,2,3,4,5]", "output": "0"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "Regular Expression Matching",
        "description": "Implement regular expression matching with support for '.' and '*'.",
        "sample input": "s = \"aa\", p = \"a*\"",
        "sample output": "true",
        "testcases": {
            "1": {"input": "s = \"mississippi\", p = \"mis*is*p*.\"", "output": "false"},
            "2": {"input": "s = \"ab\", p = \".*\"", "output": "true"},
            "3": {"input": "s = \"aab\", p = \"c*a*b\"", "output": "true"},
            "4": {"input": "s = \"aaa\", p = \"a*a\"", "output": "true"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "Wildcard Matching",
        "description": "Implement wildcard pattern matching with support for '?' and '*'.",
        "sample input": "s = \"adceb\", p = \"*a*b\"",
        "sample output": "true",
        "testcases": {
            "1": {"input": "s = \"aa\", p = \"a\"", "output": "false"},
            "2": {"input": "s = \"cb\", p = \"?a\"", "output": "false"},
            "3": {"input": "s = \"abcabczzzde\", p = \"*abc???de*\"", "output": "true"},
            "4": {"input": "s = \"acdcb\", p = \"a*c?b\"", "output": "false"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "First Missing Positive",
        "description": "Given an unsorted integer array nums, return the smallest missing positive integer.",
        "sample input": "[1,2,0]",
        "sample output": "3",
        "testcases": {
            "1": {"input": "[3,4,-1,1]", "output": "2"},
            "2": {"input": "[7,8,9,11,12]", "output": "1"},
            "3": {"input": "[1]", "output": "2"},
            "4": {"input": "[1,2,3,4,5]", "output": "6"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "Longest Valid Parentheses",
        "description": "Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.",
        "sample input": "\"(()\"",
        "sample output": "2",
        "testcases": {
            "1": {"input": "\")()())\"", "output": "4"},
            "2": {"input": "\"\"", "output": "0"},
            "3": {"input": "\"((()))\"", "output": "6"},
            "4": {"input": "\"()(()\"", "output": "2"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "Edit Distance",
        "description": "Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.",
        "sample input": "horse, ros",
        "sample output": "3",
        "testcases": {
            "1": {"input": "intention, execution", "output": "5"},
            "2": {"input": "abc, abc", "output": "0"},
            "3": {"input": "abcdef, abc", "output": "3"},
            "4": {"input": "zoologicoarchaeologist, zoologist", "output": "10"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "Burst Balloons",
        "description": "Given n balloons, each balloon is painted with a number on it represented by an array. You are to burst all the balloons. Return the maximum coins you can collect.",
        "sample input": "[3,1,5,8]",
        "sample output": "167",
        "testcases": {
            "1": {"input": "[1,5]", "output": "10"},
            "2": {"input": "[8,2,6,8,9]", "output": "1296"},
            "3": {"input": "[7,9,8,0,7,1,3,5,5,2,3]", "output": "1654"},
            "4": {"input": "[1,2,3,4,5]", "output": "110"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "Palindrome Partitioning II",
        "description": "Given a string s, partition s such that every substring is a palindrome. Return the minimum cuts needed.",
        "sample input": "aab",
        "sample output": "1",
        "testcases": {
            "1": {"input": "a", "output": "0"},
            "2": {"input": "ab", "output": "1"},
            "3": {"input": "aabaa", "output": "0"},
            "4": {"input": "abcbd", "output": "2"}
        }
    },
    {
        "difficulty": "hard",
        "questionname": "Minimum Window Substring",
        "description": "Given two strings s and t, return the minimum window in s which will contain all the characters in t.",
        "sample input": "s = \"ADOBECODEBANC\", t = \"ABC\"",
        "sample output": "\"BANC\"",
        "testcases": {
            "1": {"input": "s = \"a\", t = \"a\"", "output": "\"a\""},
            "2": {"input": "s = \"a\", t = \"aa\"", "output": "\"\""},
            "3": {"input": "s = \"abcdebdde\", t = \"bde\"", "output": "\"bdde\""},
            "4": {"input": "s = \"this is a test string\", t = \"tist\"", "output": "\"t stri\""}
        }
    }
]